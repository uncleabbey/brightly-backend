{
    "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Brightly Backend API",
    "description": "An education solution to help kids between 6 - 10 attends class during lockdown",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT.html",
      "contact": {
        "name": "Group 7",
        "url": "http://uncleabbey.github.io/",
        "email": "gabkay007@gmail.com"
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    } 
  },
  "host": ["brightly-api.herokuapp.com"],
  "basePath": "/api/v1",
  "schemes": [
        "https"
    ],
    "tags": [
    {
      "name": "User",
      "description": "API for aunthentication and access"
    },
    {
      "name": "Class",
      "description": "API for class activities"
    },
    {
      "name": "Lesson",
      "description": "API for lessons in a class"
    },
    {
      "name": "Resources",
      "description": "API for lesson resources"
    }
  ],
    "consumes": [
        "application/json",
        "multipart/form-data"
    ],
    "produces": [
        "application/json"
    ],
      "paths": {
    "/auth/signup/student": {
      "post": {
        "tags": ["User"],
        "summary": "it registers student",
        "description": "Registers the students and returns the token",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#/definitions/Student"
            }
        }
      ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
          "description": "bad request"
          }
        }
      }
    },
    "/auth/signup/teacher": {
      "post": {
        "tags": ["User"],
        "summary": "it registers teacher",
        "description": "Registers the teacher and returns the token",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
        }
      ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
          "description": "bad request"
          }
        }
      }
    },
      "/auth/login": {
      "post": {
        "tags": ["User"],
        "summary": "login users",
        "description": "login the user and returns the token",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#/definitions/User"
            }
        }
      ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
          "description": "error"
          }
        }
      }
    },
  "/auth/me": {
      "get": {
        "tags": ["User"],
        "summary": "Get users",
        "description": "Get a user details based on token supplied",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
          "description": "error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
  "/auth/change/password": {
    "patch": {
      "tags": ["User"],
      "summary": "Changes the password of the user",
      "description": "Changes the password of the user. Takes a s",
        "parameters": [
          {
            "name": "password",
            "in": "body",
            "required": "true",
            "type": "string"
        }
      ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
          "description": "bad request || same password as old"
          },
          "500": {
          "description": "internal server error"
          }
        },        
        "security": [
          {
            "bearerAuth": []
          }
        ]
    }
  },
  "/auth/change/avatar": {
    "patch": {
      "tags": ["User"],
      "summary": "Changes the avatar of the user",
      "description": "Changes the avatar of the user",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
        {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "type": "file"
          }
      ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
          "description": "bad request || same password as old"
          },
          "500": {
          "description": "internal server error"
          }
        },        
        "security": [
          {
            "bearerAuth": []
          }
        ]
    }
  },
    "/class": {
      "get": {
        "tags": ["Class"],
        "summary": "It get the list of classes",
        "description": "Get List of classes based on token",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Class"],
        "summary": "It adds class",
        "description": "Protected route. Add class to the database",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#/definitions/Class"
            }
        }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
          "description": "error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
  "/class/{id}": {
    "get": {
      "tags": ["Class"],
      "summary": "It retrieves class by id",
      "description": "Protected route. retrieves the class by its id from the database",
      "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The id of the class.",
            "type": "string"
          }
        ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "successful operation"
        },
        "400": {
          "description": "error"
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    },
    "patch": {
      "tags": ["Class"],
      "summary": "It updates a class by id",
      "description": "Protected route. edit the class by its id from the database",
      "parameters": [
              {
            "name": "data",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#/definitions/Class"
            }
        },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The id of the class.",
            "type": "string"
          }
        ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "successful operation"
        },
        "400": {
          "description": "error"
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    },
    "delete": {
      "tags": ["Class"],
      "summary": "It deletes a class by id",
      "description": "Protected route. delete the class by its id from the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The id of the class.",
            "type": "string"
          }
        ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "successful operation"
        },
        "400": {
          "description": "error"
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  },
  "/class/{classId}/lessons": {
    "post": {
      "tags": ["Lesson"],
      "summary":"It adds lessons to the class",
      "description": "Protected route. Add lesson to the class",
      "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "description": "The id of the class.",
            "type": "string"
          },
        {
            "name": "data",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#/definitions/Lesson"
            }
        }
        ],
      "produces": ["application/json"],
      "responses": {
        "201": {
          "description": "successful operation"
        },
        "400": {
          "description": "error"
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    },
    "get": {
      "tags": ["Lesson"],
      "summary": "It retrieves the list of lessons for a class",
      "description": "Protected route. gets a list  of lessons of a class",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "description": "The id of the class.",
            "type": "string"
          }
        ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "successful operation"
        },
        "400": {
          "description": "error"
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  },
  "/lessons/{lessonId}": {
    "get": {
      "tags": ["Lesson"],
      "summary": "It retrieves lesson",
      "description": "Protected route. retrieves the lesson by its id from the database",       
      "parameters": [
          {
            "name": "lessonId",
            "in": "path",
            "required": true,
            "description": "The id of the class.",
            "type": "string"
          }
        ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "successful operation"
        },
        "400": {
          "description": "error"
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    },
    "patch": {
      "tags": ["Lesson"],
      "summary": "It updates lesson",
      "description": "Protected route. updates the lesson by its id from the database",       
      "parameters": [
          {
            "name": "lessonId",
            "in": "path",
            "required": true,
            "description": "The id of the class.",
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#/definitions/Lesson"
            }
        }
        ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "successful operation"
        },
        "400": {
          "description": "error"
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    },
    "delete": {
      "tags": ["Lesson"],
      "summary": "It deletes lesson",
      "description": "Protected route. delete the lesson by its id from the database",       
      "parameters": [
          {
            "name": "lessonId",
            "in": "path",
            "required": true,
            "description": "The id of the class.",
            "type": "string"
          }
        ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "successful operation"
        },
        "400": {
          "description": "error"
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  },
  "/lessons/{lessonId}/resources": {
    "post": {
      "tags": ["Resources"],
      "summary": "Add add either pdf or video ressources to lessons",
      "description": "Allow teachers to add resources to lessons endpoint.",
      "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
      "parameters": [
        {
          "name": "lessonId",
          "in": "path",
          "description": "The lesson Id",
          "required": true,
          "type": "string"
        },
        {
          "name": "files",
          "in": "formData",
          "description": "file to upload",
          "required": true,
          "type": "file"
        },
        {
          "name": "title",
          "in": "body",
          "description": "title of file",
          "required": "true",
          "type": "string"
        },
        {
          "name": "type",
          "in": "body",
          "description": "type of file",
          "required": "true",
          "type": "string"
        }
      ],
      "responses": {
        "201": {
          "description": "successful operation"
        },
        "400": {
          "description": "Bad request"
        },
        "401": {
          "description": "unathorize request"
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  },
  "/resources/grade": {
    "get": {
      "tags": ["Resources"],
      "summary": "It retrieves resources according to class grade",
      "description": "Protected route. retrieves resources according to class grade from the database",       
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "successful operation"
        },
        "400": {
          "description": "error"
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  }
  },
  "definitions": {
      "Student": {
      "required": [
        "firstName", "lastName", "email", "grade", "password"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "description": "The auto-generated id of the user."
        },
        "firstName": {
          "type": "string",
          "description": "The first name of your user."
        },
        "lastName": {
          "type": "string",
          "description": "The first name of your user."
        },
        "email": {
          "type": "string",
          "description": "The email of your user."
        },
        "grade": {
          "type": "string",
          "description": "The grade of your user."
        },
        "password": {
          "type": "string",
          "description": "The password of your user."
        }
      },
      "example": {
        "firstName": "Jane",
        "lastName": "Doe",
        "email": "janeDoe@gmail.com",
        "grade": "3",
        "password": "johnnixace"
      }
    },
      "Teacher": {
      "required": [
        "firstName", "lastName", "email", "subject", "password"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "description": "The auto-generated id of the user."
        },
        "firstName": {
          "type": "string",
          "description": "The first name of your user."
        },
        "lastName": {
          "type": "string",
          "description": "The last name of your user."
        },
        "email": {
          "type": "string",
          "description": "The email of your user."
        },
        "subject": {
          "type": "string",
          "description": "The email of your user."
        },
        "password": {
          "type": "string",
          "description": "The password of your user."
        }
      },
      "example": {
        "firstName": "John",
        "lastName": "Doe",
        "email": "johnDoe@gmail.com",
        "subject": "English Language",
        "password": "johnnixace"
      }
    },
    "Class": {
      "required": [
        "schedules", "grade", "subject" 
      ],
      "properties": {
        "_id": {
          "type": "string",
          "description": "The auto-generated id of the class"
        },
        "schedules": {
          "type": "array",
          "description": "list of schedules for class"
        },
        "subject": {
          "type": "string",
          "description": "The subject of the class"
        },
        "grade": {
          "type": "string",
          "description": "the class grade"
        }
      },
      "example": {
        "subject": "English Language",
        "schedules": ["Thursday", "Friday"],
        "grade": "3"
      }
    },
    "Lesson": {
      "required": [
        "title", "body", "week" 
      ],
      "properties": {
        "_id": {
          "type": "string",
          "description": "The auto-generated id of the lesson"
        },
        "week": {
          "type": "integer",
          "description": "The week of the lesson"
        },
        "title": {
          "type": "string",
          "description": "The title of the lesson"
        },
        "body": {
          "type": "string",
          "description": "The body of the lesson"
        }
      },
      "example": {
        "week": 3,
        "title":"Lorem Dolor",
        "body": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostru exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
      }
    },
    "User": {
      "required": [
        "email", "password"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "description": "The auto-generated id of the user."
        },
        "name": {
          "type": "string",
          "description": "The name of your user."
        },
        "email": {
          "type": "string",
          "description": "The email of your user."
        },
        "password": {
          "type": "string",
          "description": "The password of your user."
        }
      },
      "example": {
        "email": "johnDoe@gmail.com",
        "password": "johnnixace"
      }
    }
  }
}